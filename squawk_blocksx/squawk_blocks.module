<?php

/*
 * Squawk Blocks
 *
 */
 
//Hooks.

/**
 * Implements hook_block_info().
 *
 * Define all blocks provided by the module.
 */
function squawk_blocks_block_info() {
  // Define an associative array for each block.
  $blocks = array(
	'user_tags_filter_block' => array(
		'info' => t('User Specific Update Filters'),
		'cache' => DRUPAL_CACHE_PER_USER,
	),
	'sender_filter_block' => array(
		'info' => t('Author/Sender Name Filters'),
		'cache' => DRUPAL_CACHE_PER_USER,
	),
	'viewer_profile_navigation_block' => array(
		'info' => t('Profile Navigation Links'),
		'cache' => DRUPAL_CACHE_PER_USER,
	),
	'viewer_destination_nav_block' => array(
		'info' => t('Destination Navigation Links'),
		'cache' => DRUPAL_CACHE_PER_USER,
	),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * Return a rendered or renderable view of a block.
 */
function squawk_blocks_block_view($delta = '') {
  $block=array();
  //$delta: what block to render as defined in hook_block_info.
  global $user;
  if ($user->uid == 0) {
	return;
  }
  $u = user_load($user->uid);
  $fname=$u->field_first_name['und'][0]['value'];
  switch ($delta) {

	case 'user_tags_filter_block':
		$block['subject'] = '';
		$block['content'] = squawk_blocks_contents($delta, $u);
		
	break;
	case 'sender_filter_block':
		$block['subject'] = '';
		$block['content'] = squawk_blocks_contents($delta, $u);
		
	break;
	case 'viewer_profile_navigation_block':
		$block['subject'] = '';
		//$block['content'] = squawk_blocks_viewer_navigation_links($delta, $u);
		$block['content'] = squawk_blocks_viewer_profile_navigation($delta, $u);
		
	break;
	case 'viewer_destination_nav_block':
		$block['subject'] = '';
		//$block['content'] = squawk_blocks_viewer_navigation_links($delta, $u);
		$block['content'] = squawk_blocks_viewer_destination_navigation($delta, $u);
		
	break;
   }
  return $block;
}
/**
 * Function that generates the content for d7dev_admin blocks.
 */
 
function squawk_blocks_contents($delta = '', $user) {
  //additional blocks may be added, so base this on the block $delta
	switch ($delta) {
		case 'user_tags_filter_block': 
			//return squawk_blocks_filter_block($user);
			return drupal_get_form('squawk_blocks_filters');
		break;
		case 'sender_filter_block': 
			//return squawk_blocks_filter_block($user);
			return drupal_get_form('squawk_blocks_sender_filters');
		break;
		case 'viewer_profile_navigation_block':
			return squawk_blocks_viewer_profile_navigation($delta);
		break;
		case 'viewer_destination_nav_block':
			return squawk_blocks_viewer_destination_navigation($delta);
		break;
	}
}
function squawk_blocks_filters($form, &$form_state) {
	global $user;
	$tag_set = squawk_blocks_fetch_tag_set($user->uid);
	if(empty($form_state['vocabulary'])) {
		$form_state['vocabulary'] = $tag_set['vocabulary'];
	}
	if(empty($form_state['parent'])) {
		$form_state['parent'] = $tag_set['parent'];
	}
	$form_state['user'] = $user;
	$form['tag_set']['#tree'] = TRUE;
	//dsm($tag_set);
	$header = array();
	$options = array();
	$default_value = array();
	//define the region that will grow when a button is pressed
	$form['grow_region'] = array(
		'#type' => 'fieldset',
		'#title' => 'Content Filters',
		'#collapsible' => TRUE,
		'#collapsed' => TRUE,
		'#prefix' => '<div id="content-filter-grow-region" >',
		'#suffix' => '</div>',
	);
	$header = array(
	  'title' => t('Content Filters'),
	);
	$jq_attach = array(
	);
	foreach ($tag_set['terms'] as $key => $tag) {
		//$form['tag_set'][$tag->tid]['vocabulary'] = $tag_set['vocabulary'];
		if ($tag->field_active['und'][0]['value'] == TRUE) {
			$name = check_plain($tag->name);
			$taglist[$tag->tid] = $name;
			$options[$tag->tid] = array(
				'title' => $name,
				'#attributes' => array(
				  'id' => 'tag-' . $tag->tid,
				  'class' => array('filter-tag', 'tag-' . drupal_html_class($name),
				  ),
				),
			);
			$default_value[$tag->tid]=TRUE;
		}
	}	
	/*
	$form['grow_region']['tag_set'] = array (
		'#type' => 'tableselect',
		'#title' => 'My Tags',
		'#header' => $header,
		'#options' => $options,
		'#multiple' => TRUE,
		'#js_select' => TRUE,
		'#default_value' => $default_value,
	);*/
		$form['grow_region']['tags'] = array(
		'#type' => 'fieldset',
		'#prefix' => '<div id="tags">',
		'#suffix' => '</div>',
		'#weight' => 1,
	);
	$form['grow_region']['tags']['all_tags'] = array(
		'#type' => 'checkbox',
		'#title' => 'Tag List',
		'#weight' => 1,
		'#attributes' => array(
			//'id' => 'edit-all-leads',
			'class' => array( 'select-all', 'tags' ),
		),
	);
	$form['grow_region']['tags']['tag_set'] = array(
		'#type' => 'checkboxes',
		'#multiple' => TRUE,
		'#default_value' => array_keys($taglist),
		'#options' => $taglist,
		'#weight' => 2,
		'#attributes' => array(
			'class' => array( 'tag-checkbox' ),
		),
	);
	return $form;
}
/*
 * squawk_blocks_fetch_tag_set
 * return an array with a 'vocabulary' object and a 'terms' array.
 *
 */
function squawk_blocks_fetch_tag_set($uid) {
	//load the taxonomy terms in the users vocab sorted by alpha for now.
	//load the user specific tags from squawk_tags. Each relevant tag has the user as the parent
	//dont assume the vid just in case ...
	$vocabulary = taxonomy_vocabulary_machine_name_load('squawk_tags');
	//the current user's tags all have the username as the parent tid.
	$u = user_load($uid);
	$query = new EntityFieldQuery;
	$entities = $query->entityCondition('entity_type', 'taxonomy_term')
		->propertyCondition('name', $u->name)
		->propertyCondition('vid', $vocabulary->vid)
		->propertyOrderBy('weight','ASC')
		->execute();

	$tag_set = array();
	$tag_set['vocabulary'] = $vocabulary;
	//make sure it has a value. It should have. This tid corresponds to the parent tag of all the ones of interest.
	if(isset($entities['taxonomy_term'])) {
		$user_tid = array_keys($entities['taxonomy_term']);
		$tag_set['terms'] = taxonomy_get_tree($vocabulary->vid, $user_tid[0], NULL, TRUE);
		$tag_set['parent'] = $user_tid[0];
	}
	return $tag_set;
}
function squawk_blocks_sender_filters($form, &$form_state) {
	global $user;
	$form_state['user'] = $user;
	//$form['#tree'] = TRUE;
	$form['#tree'] = FALSE;
	drupal_add_js(drupal_get_path('module', 'squawk') . '/scripts/select-all.js');
	$options = array();
	$default_value = array();
	//define the region that will grow when a button is pressed
	$form['grow_region'] = array(
		'#type' => 'fieldset',
		'#title' => 'Sender Filters',
		'#collapsible' => TRUE,
		'#collapsed' => TRUE,
		'#prefix' => '<div id="sender-filter-grow-region" >',
		'#suffix' => '</div>',
	);
	$senders = squawk_fetch_senders($user->uid);
	$senderlist = array();
	foreach ($senders as $uid=>$sender_array) {
		$options[$sender_array['user_name']] = array(
			'title' => $sender_array['sender'] . ' (' . $sender_array['count'] . ')',
			'#attributes' => array(
			  'id' => 'sender-' . $uid,
			  'class' => array('filter-sender', 'uid-' . $uid,
			  ),
			),
		);
		$default_value[$sender_array['user_name']]=TRUE;
		$senderlist[$sender_array['user_name']] = $sender_array['sender'];
	}	
	$form['grow_region']['senders'] = array(
		'#type' => 'fieldset',
		'#prefix' => '<div id="senders">',
		'#suffix' => '</div>',
		'#weight' => 1,
	);
	$form['grow_region']['senders']['all_senders'] = array(
		'#type' => 'checkbox',
		'#title' => 'Sender List',
		'#weight' => 1,
		'#attributes' => array(
			//'id' => 'edit-all-leads',
			'class' => array( 'select-all', 'senders' ),
		),
	);
	$form['grow_region']['senders']['sender_set'] = array(
		'#type' => 'checkboxes',
		'#multiple' => TRUE,
		'#default_value' => array_keys($senderlist),
		'#options' => $senderlist,
		'#weight' => 2,
		//'#default_value' => array_keys($leadlist),
		'#attributes' => array(
			'class' => array( 'sender-checkbox' ),
		),
	);
	//dsm($form);
	return $form;
}

function squawk_blocks_viewer_profile_navigation($delta, $u) {
/*	$picx = theme('user_picture', array('account' => $u, 'no_link' => TRUE));
	$pic = array(
			'#theme' => 'user_picture',
			'#account' => $u,
			'#prefix' => '<div id="user-picture-' . $u->uid . '" class="user-picture" >',
			'#suffix' => '</div>',
		);*/
$contents = array(	
/*		'destination_picture' => array(
			'#theme' => 'user_picture',
			'#account' => $u,
			'#prefix' => '<div id="user-picture-' . $u->uid . '" class="user-picture" >',
			'#suffix' => '</div>',
		),

		'logout' => array(
			'#prefix' => '<div id="user-logout-' . $u->uid . '" class="navigation-link logout" >',
			'#suffix' => '</div>',
			'#theme' => 'link',
			'#text' => 'Log Out',
			'#path' => 'caslogout',
			'#options' => array(
				'attributes' => array('class' => array('navigation-link', 'logout'), 'id' => 'logout'),
				//REQUIRED:
				'html' => FALSE,
			),
		),

		'home_link' => array(
			'#prefix' => '<div id="user-home-navigation-' . $u->uid . '" class="navigation-link home" >',
			'#suffix' => '</div>',
			'#theme' => 'link',
			'#text' => 'My Update Channel',
			'#path' => 'channels/' . $u->uid,
			'#options' => array(
				'attributes' => array('class' => array('navigation-link', 'home'), 'id' => 'home-' . $u->uid),
				//REQUIRED:
				'html' => FALSE,
			),
		),

		'manage_tags_link' => array(
			'#prefix' => '<div id="manage-tags-' . $u->uid . '" class="navigation-link" >',
			'#suffix' => '</div>',
			'#theme' => 'link',
			'#text' => 'Manage Filters/Tags',
			'#path' => 'channels/' . $u->uid . '/tags',
			'#options' => array(
				'attributes' => array('class' => array('navigation-link', 'manage-tags'), 'id' => 'manage-tags-' . $u->uid),
				//REQUIRED:
				'html' => FALSE,
			),
		),
*/
		'manage_profile_link' => array(
			'#prefix' => '<div id="manage-profile-' . $u->uid . '" class="navigation-link" >',
			'#suffix' => '</div>',
			'#theme' => 'link',
			'#text' => 'My Profile',
			'#path' => 'channels/' . $u->uid . '/profile',
			'#options' => array(
				'attributes' => array('class' => array('navigation-link', 'manage-profile'), 'id' => 'manage-profile-' . $u->uid),
				//REQUIRED:
				'html' => TRUE,
			),
		),
	);	
	return $contents;
}
function squawk_blocks_viewer_destination_navigation($delta, $u) {
	$contents = array();
	$leads = squawk_relationships($u->uid, 'leads', 'count');
	$peers = squawk_relationships($u->uid, 'peers', 'count');
	$reports = squawk_relationships($u->uid, 'reports', 'count');
	if ($leads['count'] > 0) {
		//it should be
		$contents['leads_link'] = array(
			'#prefix' => '<div id="user-leads-nav-' . $u->uid . '" class="navigation-link" >',
			'#suffix' => '</div>',
			'#theme' => 'link',
			'#text' => ($leads['count'] > 1) ?'My Leaders' :'My Leader',
			'#path' => 'leads',
			'#options' => array(
				'attributes' => array('class' => array('navigation-link', 'leads'), 'id' => 'leads-' . $u->uid),
				//REQUIRED:
				'html' => FALSE,
			),
		);
	}
	if ($peers['count'] > 0) {
		$contents['peers_link'] = array(
			'#prefix' => '<div id="user-peers-nav-' . $u->uid . '" class="navigation-link" >',
			'#suffix' => '</div>',
			'#theme' => 'link',
			'#text' => 'My Peers',
			'#path' => 'peers',
			'#options' => array(
				'attributes' => array('class' => array('navigation-link', 'peers'), 'id' => 'peers-' . $u->uid),
				//REQUIRED:
				'html' => FALSE,
			),
		);

	}
	if ($reports['count'] > 0) {
		$contents['reports_link'] = array(
			'#prefix' => '<div id="user-reports-' . $u->uid . '" class="navigation-link" >',
			'#suffix' => '</div>',
			'#theme' => 'link',
			'#text' => 'My Direct Reports',
			'#path' => 'reports',
			'#options' => array(
				'attributes' => array('class' => array('navigation-link', 'reports'), 'id' => 'reports-' . $u->uid),
				//REQUIRED:
				'html' => FALSE,
			),
		);	
	}
	$contents['logout'] = array(
		'#prefix' => '<div id="user-logout-' . $u->uid . '" class="navigation-link logout" >',
		'#suffix' => '</div>',
		'#theme' => 'link',
		'#text' => 'Log Out',
		'#path' => 'caslogout',
		'#options' => array(
			'attributes' => array('class' => array('navigation-link', 'logout'), 'id' => 'logout'),
			//REQUIRED:
			'html' => FALSE,
		),
	);	
	return $contents;
/*		'destination_picture' => array(
			'#theme' => 'user_picture',
			'#account' => $u,
			'#prefix' => '<div id="user-picture-' . $u->uid . '" class="user-picture" >',
			'#suffix' => '</div>',
		),

		'home_link' => array(
			'#prefix' => '<div id="user-home-navigation-' . $u->uid . '" class="navigation-link home" >',
			'#suffix' => '</div>',
			'#theme' => 'link',
			'#text' => 'My Update Channel',
			'#path' => 'channels/' . $u->uid,
			'#options' => array(
				'attributes' => array('class' => array('navigation-link', 'home'), 'id' => 'home-' . $u->uid),
				//REQUIRED:
				'html' => FALSE,
			),
		),
*/
}